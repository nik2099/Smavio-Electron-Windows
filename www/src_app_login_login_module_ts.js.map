{"version":3,"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts","./src/app/login/login.page.scss","./src/app/login/login.page.html"],"names":[],"mappings":"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","file":"src_app_login_login_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","/* eslint-disable max-len */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ForgotPasswordPage } from '../forgot-password/forgot-password.page';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationService } from '../_services/notification.service';\r\n\r\n\r\nconst { App } = Plugins;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  form: any = {\r\n    username: null,\r\n    password: null\r\n  };\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  isShowLoader = false;\r\n  errorMessage = '';\r\n  platform: any;\r\n  membershipExpired = false;\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private authService: AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    private router: Router,\r\n    private notificationService: NotificationService\r\n    ) { \r\n      \r\n\r\n   \r\n    }\r\n\r\n  ngOnInit() {\r\n    this.tokenStorage.getToken().then(\r\n      data => {\r\n        if(data!=null){\r\n          this.isLoggedIn = true;\r\n        }\r\n      }\r\n    );\r\n    /*this.tokenStorage.getUser().then(\r\n      data => {\r\n        console.log(\"Data: \" + data);\r\n        if(data!=null){\r\n          this.isLoggedIn = true;\r\n        }\r\n      }\r\n    );*/\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.isShowLoader = true;\r\n    const { username, password} = this.form;\r\n    const tmpMsg = 'E-Mail-Adresse und/oder Passwort sind leider falsch. Bitte überprüfen Sie Ihre Eingabe.';\r\n    this.authService.login(username, password).then(\r\n      response => {\r\n        console.log(response.data);\r\n        if(!response.data.errors) {\r\n          if(response.data.stripe_id!=null/*response.data.has_membership!==false*/ && this.membershipExpired!==true){\r\n            this.tokenStorage.saveToken(response.data.token).then(() => {\r\n                this.tokenStorage.saveUser(response.data).then(() => {\r\n                  this.isLoginFailed = false;\r\n                  this.isLoggedIn = true;\r\n                  this.isShowLoader = false;\r\n                  this.tokenStorage.getToken().then(\r\n                    token => {\r\n                      if(token!=null){\r\n                        console.log(token);\r\n                      }else{\r\n                        console.log(\"token is null\")\r\n                      }\r\n                    }\r\n                  );\r\n                  this.router.navigate(['/home']);\r\n                  // this.reloadPage();\r\n                });\r\n            });\r\n          } else if(this.membershipExpired==true){\r\n            this.notificationService.membershipExpiredAlert();\r\n            this.isShowLoader = false;\r\n          } else {\r\n            this.membershipExpired = false;\r\n            this.errorMessage = 'Unbekannter Benutzername. Überprüfe ihn noch einmal oder versuche es mit deiner E-Mail-Adresse.';\r\n            this.isLoginFailed = true;\r\n            this.isShowLoader = false;\r\n            this.notificationService.loginResponseAlert(this.errorMessage);\r\n          }\r\n        } else {\r\n          this.membershipExpired = false;\r\n          this.errorMessage = response.data.message;\r\n          this.isLoginFailed = true;\r\n          this.isShowLoader = false;\r\n          this.notificationService.loginResponseAlert(tmpMsg);\r\n        }\r\n        //this.router.navigate(['home']);\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  async presentForgotPasswordModal() {\r\n    const modal = await this.modalController.create({\r\n      component: ForgotPasswordPage,\r\n      cssClass: 'my-custom-class',\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  exitApp(){\r\n    App.exitApp();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";","export default \"<ion-content class=\\\"login-modal\\\">\\r\\n \\r\\n        <form class=\\\"ion-margin-top\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n      \\r\\n         \\r\\n      \\r\\n          <ion-input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" required #username=\\\"ngModel\\\" placeholder=\\\"Benutzername\\\"></ion-input>\\r\\n          <ion-text class=\\\"login-error-text\\\" color=\\\"danger\\\" *ngIf=\\\"username.errors && f.submitted\\\">\\r\\n            <small class=\\\"ion-padding-start\\\">Username is required!</small>\\r\\n          </ion-text>\\r\\n      \\r\\n          <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" required #password=\\\"ngModel\\\" placeholder=\\\"Passwort\\\"></ion-input>\\r\\n          <ion-text class=\\\"login-error-text\\\" color=\\\"danger\\\" *ngIf=\\\"password.errors && f.submitted\\\">\\r\\n            <small class=\\\"ion-padding-start\\\">Password is required!</small>\\r\\n          </ion-text>\\r\\n      \\r\\n          <ion-row class=\\\"ion-margin-top login-row\\\">\\r\\n            <ion-col class=\\\"ion-text-end\\\">\\r\\n              <ion-button type=\\\"submit\\\" color=\\\"dark\\\" expand=\\\"full\\\" [disabled]=\\\"isShowLoader\\\">Login</ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col class=\\\"ion-text-start\\\">\\r\\n              <ion-button type=\\\"button\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"exitApp()\\\" [disabled]=\\\"isShowLoader\\\">Beenden</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n      \\r\\n          <ion-row class=\\\"ion-margin-top login-row\\\">\\r\\n            <ion-col class=\\\"ion-text-center\\\">\\r\\n              <ion-spinner *ngIf=\\\"isShowLoader\\\"></ion-spinner>\\r\\n              <!-- <ion-text color=\\\"danger\\\" *ngIf=\\\"f.submitted && isLoginFailed && !isShowLoader\\\">\\r\\n                <small>Login failed: {{ errorMessage }}</small>\\r\\n              </ion-text> -->\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n      \\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"ion-text-center\\\">\\r\\n              Keine Zugangsdaten? <a [routerLink]=\\\"\\\" class=\\\"small-text\\\" (click)=\\\"presentForgotPasswordModal()\\\">Anfordern</a>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </form>\\r\\n   \\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}